def findAndReplacePattern(self, words: List[str], pattern: str) -> List[str]:
        def encode(word):
            d={}
            l=[]
            j=0
            for i in word:
                if i not in d:
                    d[i]=j
                    j+=1
                l.append(d[i])
            return l
        patterncode=encode(pattern)
        return[word for word in words if encode(word)==patterncode]
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
